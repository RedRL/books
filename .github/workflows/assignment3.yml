name: assignment3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize log
        run: |
          date -Iminutes > log.txt
          echo "Harel Yerushalmi" >> log.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: |
          docker build -t books-service ./code && echo "image successfully built" >> log.txt || echo "image not able to be built" >> log.txt

      - name: Upload log if build fails
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker-compose up -d && echo "Container up and running" >> log.txt || echo "Container failed to run" >> log.txt

      - name: Run Pytest
        run: |
          docker-compose exec books pytest -v /app/tests/assn3_tests.py > assn3_test_results.txt && echo "tests succeeded" >> log.txt || echo "tests failed" >> log.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Append test results to log
        run: cat assn3_test_results.txt >> log.txt

      - name: Upload log if tests fail
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure response.txt and query.txt
        run: |
          touch log.txt
          touch response.txt
          if [ ! -f query.txt ]; then
            echo "query.txt not found" >> response.txt
            echo "query.txt not found" >> log.txt
          fi
          ls -l >> log.txt  # List files to confirm creation

      - name: Set up Docker Compose
        run: |
          docker-compose up -d && echo "Container up and running" >> log.txt || echo "Container failed to run" >> log.txt

      - name: Execute queries
        run: |
          echo "Starting query execution" >> log.txt
          if [ -f query.txt ]; then
            while IFS= read -r query; do
              echo "Executing query: ${query}" >> log.txt
              response=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:5001/books${query}")
              if [ "$response" -eq 200 ]; then
                response=$(curl -s "http://localhost:5001/books${query}")
                echo -e "query: ${query}\nresponse: ${response}" >> response.txt
              else
                echo -e "query: ${query}\nresponse: error $response" >> response.txt
              fi
            done < query.txt
          fi

      - name: Always upload log
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt

      - name: Upload query responses
        uses: actions/upload-artifact@v4
        with:
          name: query-responses
          path: response.txt
