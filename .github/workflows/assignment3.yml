name: assignment3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: |
          docker build -t books-service .
          echo "$(date -Iminutes)\nHarel Yerushalmi\nimage successfully built" >> log.txt
        continue-on-error: true

      - name: Check build status and log
        run: |
          if [ $? -ne 0 ]; then
            echo "image not able to be built" >> log.txt
            exit 1
          else
            echo "image successfully built" >> log.txt
          fi
        id: build_status

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker-compose up -d

      - name: Run Pytest
        run: |
          docker-compose exec books pytest -v tests/assn3_tests.py > assn3_test_results.txt
          echo "$(date -Iminutes)\nHarel Yerushalmi\nContainer up and running" >> log.txt
          cat assn3_test_results.txt >> log.txt
        continue-on-error: true

      - name: Check test status and log
        run: |
          if grep -q "failed" assn3_test_results.txt; then
            echo "tests failed" >> log.txt
            exit 1
          else
            echo "tests succeeded" >> log.txt
          fi
        id: test_status

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Upload test log
        uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: log.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker-compose up -d

      - name: Execute queries
        run: |
          touch response.txt
          while IFS= read -r query; do
            response=$(curl -s "http://localhost:5001/books${query}")
            echo -e "query: ${query}\nresponse: ${response}" >> response.txt
          done < query.txt

      - name: Upload response file
        uses: actions/upload-artifact@v4
        with:
          name: query-responses
          path: response.txt
